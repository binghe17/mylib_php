<?php
/*
cURL库可以简单和有效地去抓网页，您只需要运行一个脚本，然后分析一下您所抓取的网页，然后就可以以程序的方式得到您想要的数据了。无论是您想从一个链接上取部分数据，或是取一个XML文件并把其导入数据库，哪怕就是简单的获取网页内容，cURL是一个功能强大的PHP库。本文主要讲述如果使用这个PHP库。
　　启用cURL设置
　　首先，我们得先要确定我们的PHP是否开启了这个库，您可以通过使用php_info()函数来得到这一信息：
 */
phpinfo();




/*
　　如果您可以在网页上看到下面的输出，那么表示cURL库已被开启。
　　如果您看到的话，那么您需要设置您的PHP并开启这个库。如果您是在Windows平台下，那么非常简单，您需要改一改您的php.ini文件的设置，找到php_curl.dll，并取消前面的分号注释就行了，如下所示：

//取消下在的注释
extension=php_curl.dll

　　如果您是在Linux下面，那么，您需要重新编译您的PHP了，编辑时，您需要打开编译参数，在configure命令上加上“–with-curl”参数。
　　一个小示例
　　如果一切就绪，下面是一个小例子：
 */


//CURL 获取网站源代码
function get_urlCode($url){
    $curl = curl_init();                                        // 初始化一个cURL对象
    curl_setopt($curl, CURLOPT_URL, $url);  // 设置您需要抓取的URL
    curl_setopt($curl, CURLOPT_HEADER, 1);                      // 设置header
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);              // 设置cURL参数，要求结果保存到字符串中还是输出到屏幕上
    $data = curl_exec($curl);                                   // 运行cURL，请求网页
    curl_close($curl);                                          // 关闭URL请求
    return $data;                                               // 显示获得的数据
}
var_dump(get_urlCode('http://baidu.com'));



/*
　　如何POST数据
　　上面是抓取网页的代码，下面则是向某个网页POST数据。假设我们有一个处理表单的网址http://www.111cn.cn/sendSMS.php，
	其可以接受两个表单域，一个是电话号码，一个是短信内容。示例代码如下：
*/
$phoneNumber = '13912345678';
$message = 'This message was generated by curl and php';
$curlPost = 'pNUMBER=' . urlencode($phoneNumber) . '&MESSAGE=' . urlencode($message) . '&SUBMIT=Send';
$ch = curl_init();curl_setopt($ch, CURLOPT_URL, 'http://www.example.com/sendSMS.php');
curl_setopt($ch, CURLOPT_HEADER, 1);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, $curlPost);
$data = curl_exec();
curl_close($ch);





/*
　　从上面的程序我们可以看到，使用CURLOPT_POST设置HTTP协议的POST方法，而不是GET方法，
	然后以CURLOPT_POSTFIELDS设置POST的数据。
	关于代理服务器,下面是一个如何使用代理服务器的示例，代码很简单，我就不用多说了：
*/
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'http://www.example.com');
curl_setopt($ch, CURLOPT_HEADER, 1);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_HTTPPROXYTUNNEL, 1);
curl_setopt($ch, CURLOPT_PROXY, 'fakeproxy.com:1080');
curl_setopt($ch, CURLOPT_PROXYUSERPWD, 'user:password');
$data = curl_exec();
curl_close($ch);






/*
　　关于SSL和Cookie
　　关于SSL也就是HTTPS协议，您只需要把CURLOPT_URL连接中的http://变成https://就可以了。当然，还有一个参数叫CURLOPT_SSL_VERIFYHOST可以设置为验证站点。
　　关于Cookie，您需要了解下面三个参数：

　　1、CURLOPT_COOKIE：在当面的会话中设置一个cookie
　　2、CURLOPT_COOKIEJAR：当会话结束的时候保存一个Cookie
　　3、CURLOPT_COOKIEFILE：Cookie的文件。

　　HTTP服务器认证
　　最后，我们来看一看HTTP服务器认证的情况：
*/
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'http://www.example.com');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
curl_setopt(CURLOPT_USERPWD, '[username]:[password]')
$data = curl_exec();
curl_close($ch);

//----------------------------------------------------------------

/**
 *  获取远程文件内容
 *  @param $url 文件http地址
 */
function fopen_url($url){
    if (function_exists('file_get_contents')) {
        $file_content = @file_get_contents($url);
    } elseif (ini_get('allow_url_fopen') && ($file = @fopen($url, 'rb'))){
        $i = 0;
        while (!feof($file) && $i++ < 1000) {
            $file_content .= strtolower(fread($file, 4096));
        }
        fclose($file);
    } elseif (function_exists('curl_init')) {
        $curl_handle = curl_init();
        curl_setopt($curl_handle, CURLOPT_URL, $url);
        curl_setopt($curl_handle, CURLOPT_CONNECTTIMEOUT,2);
        curl_setopt($curl_handle, CURLOPT_RETURNTRANSFER,1);
        curl_setopt($curl_handle, CURLOPT_FAILONERROR,1);
        curl_setopt($curl_handle, CURLOPT_USERAGENT, 'Trackback Spam Check');
        $file_content = curl_exec($curl_handle);
        curl_close($curl_handle);
    } else {
        $file_content = '';
    }
    return $file_content;
}
//var_dump(fopen_url('http://baidu.com'));

